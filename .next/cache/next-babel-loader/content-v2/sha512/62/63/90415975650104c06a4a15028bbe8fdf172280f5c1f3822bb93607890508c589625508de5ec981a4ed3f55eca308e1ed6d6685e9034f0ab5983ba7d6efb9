{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/guillermomartin/Coding/Udemy/The Modern React Bootcamp/react-nextjs/first-next/pages/post.js\";\nimport axios from \"axios\";\n\nconst Post = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}; // ===== getting the id from the query string using getInitialProps =====\n// getInitialProps receives and object (it can be called anything)\n// what's standard, though, is to grab the pieces you need\n\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const response = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=1\");\n  const {\n    data\n  } = response;\n  console.log(data[0]); // we now have access to \"id\" and comments inside of props\n\n  return {\n    id: query.id,\n    comments: data\n  };\n};\n\nexport default Post; // ===== retrieving ID using withRouter =====\n// import { withRouter } from \"next/router\";\n// const Post = (props) => {\n//   return (\n//     <h1>You're looking at post #{props.router.query.id}</h1>\n//   );\n// }\n// export default withRouter(Post);","map":{"version":3,"sources":["/Users/guillermomartin/Coding/Udemy/The Modern React Bootcamp/react-nextjs/first-next/pages/post.js"],"names":["axios","Post","props","getInitialProps","query","response","get","data","console","log","id","comments"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD,C,CASA;AACA;AACA;;;AACAD,IAAI,CAACE,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,wDAAV,CAAvB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWF,QAAjB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAhB,EAH0C,CAK1C;;AACA,SAAO;AAACG,IAAAA,EAAE,EAAEN,KAAK,CAACM,EAAX;AAAeC,IAAAA,QAAQ,EAAEJ;AAAzB,GAAP;AAED,CARD;;AAWA,eAAeN,IAAf,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import axios from \"axios\";\n\nconst Post = (props) => {\n  return (\n    <div>\n      \n    </div>\n    \n  );\n}\n\n// ===== getting the id from the query string using getInitialProps =====\n// getInitialProps receives and object (it can be called anything)\n// what's standard, though, is to grab the pieces you need\nPost.getInitialProps = async ({ query }) => {\n  const response = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=1\");\n  const { data } = response;\n  console.log(data[0]);\n\n  // we now have access to \"id\" and comments inside of props\n  return {id: query.id, comments: data};\n  \n}\n\n\nexport default Post;\n\n\n// ===== retrieving ID using withRouter =====\n// import { withRouter } from \"next/router\";\n\n// const Post = (props) => {\n//   return (\n//     <h1>You're looking at post #{props.router.query.id}</h1>\n//   );\n// }\n\n// export default withRouter(Post);"]},"metadata":{},"sourceType":"module"}