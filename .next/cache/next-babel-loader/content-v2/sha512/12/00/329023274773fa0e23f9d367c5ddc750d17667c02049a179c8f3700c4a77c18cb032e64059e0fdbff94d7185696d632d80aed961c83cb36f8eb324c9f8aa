{"ast":null,"code":"import _regeneratorRuntime from \"/Users/guillermomartin/Coding/Udemy/The Modern React Bootcamp/react-nextjs/first-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/guillermomartin/Coding/Udemy/The Modern React Bootcamp/react-nextjs/first-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/guillermomartin/Coding/Udemy/The Modern React Bootcamp/react-nextjs/first-next/pages/post.js\",\n    _this = this;\n\nvar Post = function Post() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Post page!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, _this);\n}; // getInitialProps receives and object (it can be called anything)\n// what's standard, though, is to grab the pieces you need\n\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(query);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/guillermomartin/Coding/Udemy/The Modern React Bootcamp/react-nextjs/first-next/pages/post.js"],"names":["Post","getInitialProps","ctx","console","log","query"],"mappings":";;;;;;;AAAA,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CAJD,C,CAMA;AACA;;;KAPMA,I;;AAQNA,IAAI,CAACC,eAAL;AAAA,sEAAuB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeL,IAAf","sourcesContent":["const Post = () => {\n  return (\n    <h1>Post page!</h1>\n  );\n}\n\n// getInitialProps receives and object (it can be called anything)\n// what's standard, though, is to grab the pieces you need\nPost.getInitialProps = async (ctx) => {\n  console.log(query);\n}\n\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}